#main-container {
    display: flex;
    overflow: hidden;
    width: 98vw;
    margin-left: auto;
    margin-right: auto;
    transition: 0.5s ease;
    /* Добавляем плавный переход для свойства flex-direction */
}

#left-block,
#right-block {
    flex-grow: 1;
    overflow: auto;
    position: relative;
    /* width: 40vw; */
    margin-left: auto;
    margin-right: auto;
}

#right-block {
    border-radius: 20px;
    background-color: #e5e5e5;
}


/* При ширине экрана меньше 600px элементы будут располагаться вертикально */
@media screen and (max-width: 750px) {
    #main-container {
        flex-direction: column;
    }

    #left-block {
        width: 97vw;
    }

    #right-block {
        width: 97vw;
    }
}

/* При ширине экрана больше или равной 600px элементы будут располагаться горизонтально */
@media screen and (min-width: 750px) {
    #main-container {
        flex-direction: row;
    }

    #left-block {
        width: 64vw;
    }

    #right-block {
        width: 34vw;
    }
}

/* .resizable {
    overflow: auto;
    position: relative;
} */

.resizer {
    width: 10px;
    cursor: col-resize;
    background-color: #ccc;
    height: 100%;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
}

#grid-container {
    display: grid;
    gap: 5px;
    padding: 10px;
    /* background-color: #fb00ff; */
}

.grid-item {
    width: 100%;
    height: 50px;
    background-color: #C4CBFC;
    border-color: #ffb300;
    border-radius: 1vh;
    border-width: 0.3vmin;
    opacity: 1;
    transition: 0.5s;
    cursor: pointer;
    margin-bottom: 5px;

    font-size: 20px;
}

.grid-item:hover {
    /* width: 17.1vw; */
    border-radius: 2vh;
    border-width: 0.4vmin;
    /* o */
    background-color: #fb00ff;
    transition: 300ms;
    opacity: 0.9;
    transform: scale(1.05);
}

/*Это устанавливает контейнеру режим гибкого блока (flex container),
    что позволяет использовать свойства гибкого макета для дочерних элементов.*/
/* display: flex; */

/*Это свойство выравнивает дочерние элементы контейнера вдоль оси,
    перпендикулярной оси flex-direction. В данном случае, center центрирует элементы по вертикали.*/
/* align-items: center; */

/* Это свойство выравнивает дочерние элементы контейнера вдоль оси flex-direction.
    В данном случае, center центрирует элементы по горизонтали.*/
/* justify-content: center; */


.grid-item-2-1 {
    display: flex;
    align-items: center;
    justify-content: center;

    width: 20px;
    height: 30px;
    /* background-color: #4853a0; */
    /* border-color: #ffb300; */
    /* border-radius: 1vh;  */
    /* border-width: 0.3vmin; */
    opacity: 1;
    transition: 0.5s;
    /* cursor: pointer; */
    margin-bottom: 5px;

    font-size: 30px;
}

.grid-item-2-1-60 {
    display: flex;
    align-items: center;
    justify-content: center;

    width: 20px;
    height: 60px;
    /* background-color: #4853a0; */
    /* border-color: #ffb300; */
    /* border-radius: 1vh;  */
    /* border-width: 0.3vmin; */
    opacity: 1;
    transition: 0.5s;
    /* cursor: pointer; */
    margin-bottom: 5px;

    font-size: 30px;
}

.grid-item-2-2 {
    display: flex;
    align-items: center;
    justify-content: center;

    width: 100%;
    height: 20px;
    /* background-color: #C4CBFC; */
    /* border-color: #ffb300; */
    /* border-radius: 1vh;  */
    /* border-width: 0.3vmin; */
    opacity: 1;
    transition: 0.5s;
    /* cursor: pointer; */
    margin-bottom: 5px;

    font-size: 30px;
}

.grid-item-2-0 {
    width: 20px;
    height: 20px;
    /* background-color: #C4CBFC; */
    /* border-color: #ffb300; */
    /* border-radius: 1vh;  */
    /* border-width: 0.3vmin; */
    opacity: 1;
    transition: 0.5s;
    /* cursor: pointer; */
    margin-bottom: 5px;
}

#info-of-block {
    text-align: left;
}

.data-about-the-block,
.data-about-the-block-op,
#block-title,
#block-content {
    -webkit-touch-callout: initial;
    -webkit-user-select: text;
    -khtml-user-select: text;
    -moz-user-select: text;
    -ms-user-select: text;
    user-select: text;
}

#over-over-block-title {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
}

#synchronization-info-of-block {
    display: flex;
    align-items: center;
    justify-content: center;
}

#button-synchronization-info-of-block {
    display: flex;
    align-items: center;
    justify-content: center;

    border: none;
    border-radius: 150px;
    height: 60px;
    width: 60px;

    cursor: pointer;
}

#block-info {
    padding-top: 10px;
    padding-bottom: 10px;
    padding-left: 20px;
    padding-right: 20px;
}

#block-title {
    color: #333;
    height: 20px;
    font-size: 20px;
}

#block-content {
    color: #666;
}

#quantity-input-container {
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
}

#quantity-input-container input,
#quantity-input-container button {
    transition: opacity 0.3s ease-in-out;
}

.dynamic-button {
    width: 80px;
    height: 30px;
    background-color: #C4CBFC;
    border-color: #ffb300;
    border-radius: 1vh;
    border-width: 0.3vmin;
    transition: 0.5s;
    cursor: pointer;
    margin-bottom: 5px;

    font-size: 20px;
    margin-left: 30px;
    margin-right: 30px;
}

#quantity-input-container {
    display: flex;
    flex-direction: row;
    align-items: center;
}

#quantity-input,
#line_number {
    background-color: #C4CBFC;
    border-color: #ffb300;
    border-radius: 1vh;
    border-width: 0.3vmin;
    transition: 0.5s;
    height: 30px;
    cursor: text;
    font-size: 17px;
}

#quantity-input {
    flex-grow: 1;
    /* Растягиваем поле ввода, чтобы занимало оставшееся пространство */
}

.input-line_number-container {
    display: flex;
    justify-content: center;
}

#btn-confirm,
#btn-confirm-of-input-line_number-container {
    background-color: #C4CBFC;
    border-color: #ffb300;
    border-radius: 1vh;
    border-width: 0.3vmin;
    transition: 0.5s;

    width: 150px;
    min-height: 30px;
    cursor: pointer;
    font-size: 20px;
}

#btn-confirm {
    margin-left: 10px;
}

/* Добавляем анимацию для плавного появления */
@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

/* Применяем анимацию к элементу */
.info-fade-in {
    animation: fadeIn 0.5s ease;
}